CREATE OR REPLACE PACKAGE BODY METUSER.METRO_USER_SECURITY AS

  FUNCTION FN_GET_HASH (P_USERID IN NUMBER, P_PASSWORD IN VARCHAR2) RETURN VARCHAR2 AS
	L_SALT VARCHAR2(30) := '7AVZL8VTRTZTBA5=';
  BEGIN
    RETURN DBMS_CRYPTO.HASH(UTL_RAW.CAST_TO_RAW(P_USERID || L_SALT || UPPER(P_PASSWORD)),DBMS_CRYPTO.HASH_SH1);
  END;

  PROCEDURE PKG_ADD_USER (P_USERID IN NUMBER, P_PASSWORD IN VARCHAR2) AS
  BEGIN
    INSERT INTO METUSER.USER_CREDENTIAL (CREDENTIALID, USERID, PASSWORD, STATUS, EXPIREDON)
    VALUES (METUSER.CREDENTIAL_SEQ.NEXTVAL, P_USERID, FN_GET_HASH(P_USERID, P_PASSWORD), 'ACTIVE', (CURRENT_DATE + 90));
    
    COMMIT;
  END;
   
  PROCEDURE PKG_CHANGE_PASSWORD (P_USERID IN NUMBER, P_OLD_PASSWORD IN VARCHAR2, P_NEW_PASSWORD IN VARCHAR2) AS
    V_ROWID  ROWID;
  BEGIN
    SELECT ROWID INTO V_ROWID FROM METUSER.USER_CREDENTIAL
    WHERE USERID = P_USERID
    AND PASSWORD = FN_GET_HASH(P_USERID, P_OLD_PASSWORD)
	AND	STATUS = 'ACTIVE'
    FOR UPDATE;
    
    UPDATE METUSER.USER_CREDENTIAL SET PASSWORD = FN_GET_HASH(P_USERID, P_NEW_PASSWORD),
	LASTMODIFIEDDATETIME = CURRENT_DATE, LASTMODIFIEDSIGNON = USER
    WHERE ROWID = V_ROWID;
    
    COMMIT;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RAISE_APPLICATION_ERROR(-20000, 'INVALID USERNAME/PASSWORD.');
  END;

  FUNCTION FN_VALID_USER (P_USERID IN NUMBER, P_PASSWORD IN VARCHAR2) RETURN VARCHAR2 AS
    V_STATUS  VARCHAR2(25) := NULL;
  BEGIN
    SELECT STATUS INTO V_STATUS FROM METUSER.USER_CREDENTIAL
    WHERE  USERID = P_USERID
    AND    PASSWORD = FN_GET_HASH(P_USERID, P_PASSWORD);
	
	IF V_STATUS = NULL THEN
		V_STATUS := 'INVALID';
	END IF;	
    
    RETURN V_STATUS;
	
  EXCEPTION
    WHEN OTHERS THEN
      RETURN 'ERROR';
  END;
  
END;
/

SHOW ERRORS;